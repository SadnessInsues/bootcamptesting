#!/bin/bash -e
mkdir /trash
cd /trash
apt-get update
apt-get install nginx-full -y
apt-get install ufw -y
apt-get install links -y
apt-get install mysql-server -y
sudo apt-get install php7.0  php7.0-mysql php-common php7.0-cli php7.0-fpm php7.0-common php7.0-json -y
systemctl enable nginx
systemctl enable mariadb
systemctl start nginx
systemctl start mariadb
echo "create user 'user' identified by 'b3stp4ssw0rd';" | mysql
echo "create database wp;" | mysql
echo "grant all on wp.* to 'user';" | mysql
echo "exit" | mysql
echo "============================================"
echo "WordPress Install Script"
echo "============================================"
echo "============================================"
echo "A robot is now installing WordPress for you."
echo "============================================"
#download wordpress
curl -O https://wordpress.org/latest.tar.gz
#unzip wordpress
tar -zxvf latest.tar.gz
#change dir to wordpress
cd wordpress
#copy file to parent dir
cp -rf . ..
#move back to parent dir
cd ..
#remove files from wordpress folder
rm -R wordpress
#create wp config
cp wp-config-sample.php wp-config.php


#set WP salts
perl -i -pe'
  BEGIN {
    @chars = ("a" .. "z", "A" .. "Z", 0 .. 9);
    push @chars, split //, "!@#$%^&*()-_ []{}<>~\`+=,.;:/?|";
    sub salt { join "", map $chars[ rand @chars ], 1 .. 64 }
  }
  s/put your unique phrase here/salt()/ge
' wp-config.php

#create uploads folder and set permissions
mkdir wp-content/uploads
chmod 775 wp-content/uploads
echo "Cleaning..."
#remove zip file
rm latest.tar.gz
#remove bash script
rm wp.sh
echo "========================="
echo "Installation is complete."
echo "========================="
#set database details with perl find and replace
perl -pi -e "s/database_name_here/wp/g" wp-config.php
perl -pi -e "s/username_here/user/g" wp-config.php
perl -pi -e "s/password_here/b3stp4ssw0rd/g" wp-config.php
systemctl stop nginx
rsync -av /trash/* /var/www/html/
rm -rf /trash/default
rm -rf /etc/nginx/sites-enabled/default
cat >> /trash/default << EOF
server {
 listen 80 default_server;
 listen [::]:80 default_server;

 # SSL configuration
 #
 # listen 443 ssl default_server;
 # listen [::]:443 ssl default_server;
 #
 # Note: You should disable gzip for SSL traffic.
 # See: https://bugs.debian.org/773332
 #
 # Read up on ssl_ciphers to ensure a secure configuration.
 # See: https://bugs.debian.org/765782
 #
 # Self signed certs generated by the ssl-cert package
 # Don't use them in a production server!
 #
 # include snippets/snakeoil.conf;

 root /var/www/html;

 # Add index.php to the list if you are using PHP
 index index.html index.htm index.nginx-debian.html;

 server_name _;

 location / {
 # First attempt to serve request as file, then
 # as directory, then fall back to displaying a 404.
 try_files $uri $uri/ =404;
 }

 # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
 #
 location ~ \.php$ {
 include snippets/fastcgi-php.conf;

 # With php7.0-cgi alone:
 # fastcgi_pass 127.0.0.1:9000;
 # With php7.0-fpm:
 fastcgi_pass unix:/run/php/php7.0-fpm.sock;
 }

 # deny access to .htaccess files, if Apache's document root
 # concurs with nginx's one
 #
 location ~ /\.ht {
  deny all;
 }
}
EOF


cp /trash/default /etc/nginx/sites-enabled/default
cd /etc/php/7.0/fpm/
perl -pi -e "s/cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g" php.ini
systemctl start nginx
systemctl restart nginx
systemctl restart php7.0-fpm
